/*

Player groups configuration file
---------------------------------

This file defines "player groups" and their privileges.

Each group has its id and name, lists of available commands and other
permissions, and a list of other groups it inherits from.


Group settings
--------------
<id>
Unique group number. The only required field.

<name>
Any string. If empty, defaults to "Group <id>". It is used in several @who
commands.

<level>
Equivalent of GM level, which was used in revisions before r15572. You can
set it to any number, but usually it's between 0 (default) and 99. Members of
groups with lower level can not perform some actions/commands (like @kick) on
members of groups with higher level. It is what script command getgmlevel()
returns. Group level can also be used to override trade restrictions
(db/item_trade.txt).

<commands>
A group of settings
	<command name> : <bool>
or
	<commandname> : [ <bool>, <bool> ]
First boolean value is for atcommand, second one for charcommand. If set to
true, group can use command. If only atcommand value is provided, false is
assumed for charcommand. If a command name is not included, false is assumed for
both atcommand and charcommand.
For a full list of available commands, see: doc/atcommands.txt.
Command names must not be aliases.

<log_commands>
Boolean value. If true then all commands used by the group will be logged to
atcommandlog. If setting is omitted in a group definition, false is assumed.
Requires 'log_commands' to be enabled in 'conf/logs.conf'.

<permissions>
A group of settings
	<permission> : <bool>
If a permission is not included, false is assumed.
For a full list of available permissions, see: doc/permissions.txt

<inherit>
A list of group names that given group will inherit commands and permissions
from. Group names are case-sensitive.

Inheritance results
-------------------
Both multiple inheritance (Group 2 -> Group 1 and Group 3 -> Group 1) and
recursive inheritance (Group 3 -> Group 2 -> Group 1) are allowed.

Inheritance rules should not create cycles (eg Group 1 inherits from Group 2,
and Group inherits from Group 1 at the same time). Configuration with cycles is
considered faulty and can't be processed fully by server.

Command or permission is inherited ONLY if it's not already defined for the
group.
If group inherits from multiple groups, and the same command or permission is
defined for more than one of these groups, it's undefined which one will be
inherited.

Syntax
------
This config file uses libconfig syntax:
http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-Files
*/

groups: (
{
	id: 0 /* group 0 is the default group for every new account */
	name: "Player"
	level: 0
	inherit: ( /*empty list*/ )
	commands: {
		/* informational commands */
		email: true
		commands: true
		charcommands: true
		help: true
		rates: true
		uptime: true
		showdelay: true
		mobinfo: true
		iteminfo: true
		whodrops: true
		time: true
		jailtime: true
		hominfo: false  /* Disabled for now */
		homstats: false
		showexp: true
		showzeny: true
		/* feature commands */
		duel: false
		invite: false
		accept: true
		reject: true
		leave: true
		refresh: true
		noask: true
		noks: true
		autoloot: false
		alootid: false
		autoloottype: false
		request: true
		go: false /* is this map anchors? */
		breakguild: false /* This might be problematic if allowed */
		channel: true
        send_gm: true
        show_client_version: true
		exp: true
	}
	permissions: {
		/* without this basic permissions regular players could not
		trade or party */
		can_trade: true
		can_party: true
	}
},
{
	id: 1
	name: "Approved Player Bots"
	inherit: ( "Player" )
	level: 0
	commands: {
		autotrade: true
		mail: true
		monsterignore: true
	}
	permissions: {
		disable_pvm: true
		disable_pvp: true
		disable_exp: true
		disable_pickup: true
		disable_store: true
		disable_skill_usage: true
	}
},
{
	id: 2
	name: "TMW-owned Bots"
	inherit: ( "Player" )
	level: 1 /* give gm 1 to bypass spam protection */
	commands: {
		autotrade: true
		storage: true
		mail: true
		auction: true
		identify: true
		trade: true
		repairall: true
		heal: true
		alive: true
		monsterignore: true
	}
},
{
	id: 40
	name: "Dev"
	inherit: ( "Player" )
	level: 40
	commands: {
		npctalk: true
		monsterignore: true
		dropall: true
		whereis: true
		version: true
		where: true
		jumpto: true
		follow: true
		who: true
		who2: true
		who3: true
		whomap: true
		whomap2: true
		whomap3: true
		users: true
		broadcast: true
		localbroadcast: true
		tonpc: true
		effect: true
		displayskill: true
		displaystatus: true
		mapinfo: true
		gat: true
		mobsearch: true
		idsearch: true
		showmobs: true
		skillid: true
		save: true
		memo: true
		load: true
		jump: true
		go: true
		speed: true
		model: true
		hairstyle: true
		haircolor: true
		dye: true
		changelook: true
		heal: true
		alive: true
	}
	log_commands: true
	permissions: {
		receive_requests: true
		view_equipment: true
	}
},
{
	id: 50
	name: "Event Manager"
	inherit: ( "Dev" )
	level: 50
	commands: {
		kill: true
		nuke: true
		doommap: true
		mount: true
		mount2: true
		killer: true
		killable: true
		storeall: true
		monster: true
		monstersmall: true
		monsterbig: true
		summon: true
		clone: true
		slaveclone: true
		evilclone: true
		killmonster2: true
		cleanarea: true
		cleanmap: true
		disguise: [true, true]
		undisguise: [true, true]
		size: [true, true]
		raise: true
		raisemap: true
		day: true
		night: true
		skillon: true
		skilloff: true
		pvpon: true
		pvpoff: true
		gvgon: true
		gvgoff: true
		allowks: true
		me: true
		marry: true
		divorce: true
		refreshall: true
		sizeall: true
	}
	log_commands: true
	permissions: {
		can_trade: false
		any_warp: true
		view_hpmeter: true
	}
},
{
	id: 60
	name: "GM"
	inherit: ( "Event Manager" )
	level: 60
	commands: {
		accinfo: true
		hide: true
		follow: true
		kick: true
		disguise: true
		fakename: true
		option: true
		speed: true
		warp: true
		kill: true
		recall: true
		ban: true
		block: true
		jail: true
		jailfor: true
		unjail: true
		mute: true
		mutearea: true
		storagelist: true
		cartlist: true
		itemlist: true
		stats: true
		partyspy: true
		guildspy: true
	}
	log_commands: true
	permissions: {
		join_chat: true
		kick_chat: true
		hide_session: true
		who_display_aid: true
		hack_info: true
		any_warp: true
		view_equipment: true
	}
},
{
	id: 80
	name: "Greater Dev"
	inherit: ( "Dev" )
	level: 80
	commands: {
		itemreset: true
		clearstorage: true
		clearcart: true
		hidenpc: true
		shownpc: true
		loadnpc: true
		unloadnpc: true
		unloadnpcfile: true
		npcmove: true
		addwarp: true
		misceffect: true
		skilltree: true
		questskill: true
		lostskill: true
		useskill: true
		itemlist: true
		blvl: true
		jlvl: true
		streset: true
		skreset: true
		reset: true
		jobchange: true
		mount: true
		mount2: true
		kickall: true
		reloaditemdb: true
		reloadmobdb: true
		reloadskilldb: true
		reloadquestdb: true
		reloadscript: true
		set: true
		makeegg: true
		hatch: true
	}
	log_commands: true
	permissions: {
		any_warp: true
		view_equipment: true
	}
},
{
	id: 99
	name: "Admin"
	level: 99
	inherit: ( "Greater Dev", "GM" )
	commands: {
		/* not necessary due to all_commands: true */
	}
	log_commands: true
	permissions: {
		can_trade: true
		can_trade_bound: true
		can_party: true
		all_skill: true
		all_equipment: true
		skill_unconditional: true
		use_check: true
		use_changemaptype: true
		all_commands: true
		hchsys_admin: true
	}
}
)
