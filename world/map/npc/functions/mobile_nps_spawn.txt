//  quest treasure quest
// Author of Easter Quest this is based off of: PjotrOrial
// Author: wushin

function|script|QuestEvent|{

    if ((countitem(@RequiredItemSn$) == 0) || (BaseLevel < @RequiredLevel)) //player must be level X and have Y
        goto L_EndTooYoung;
    if (@QuestTime > gettimetick(2))
        goto L_EndTooYoung;
    if (@questtimepenalty == 0)
        goto L_WarmUp;
    // prevent clicking multiple times:
    if (gettimetick(2) < @questtimepenalty + @QUEST_FOUND_WAIT_TIME)
        goto L_End2;
    set @questtimepenalty, gettimetick(2);

    // global counter to determine reshuffle times of the items.
    set $@peopleFoundItems[$@QuestItemId], $@peopleFoundItems[$@QuestItemId]+1;

    // give a small reward:
    message strcharinfo(0), "You found something!";
    set @tmp, (getarraysize(@SmallQuestItems$) - 1);
    set @random, rand(1, @tmp + 2);
    if (@random  < @tmp)     getitem @SmallQuestItems$[@random], 1;
    if (@random == @tmp)     getexp rand(200), 0;
    if (@random == @tmp + 1) set Zeny, Zeny + rand(50);
    misceffect FX_GETITEM, strcharinfo(0);

    // Quest End
    if(rand(100) > @QUEST_QUEST_DROP_CHANCE)
       goto L_EndReward;
    // standard case is branch taken, so only if rand yields 0, medium rewarding.
    if (rand(@QUEST_ITEM_INV_CHANCE))
        goto L_EpicReward;

    set @random, rand(1, (getarraysize(@MediumQuestRewards$) - 1));
    getitem @MediumQuestRewards$[@random], 1;
    misceffect FX_GETITEM, strcharinfo(0);

L_EpicReward:
        delitem @RequiredItemSn$, 1;
        set @QuestTime, gettimetick(2) + @QUEST_QUEST_REDO_WAIT_TIME;
        set @random, rand(1, (getarraysize(@EpicQuestRewards$) - 1));
        getitem @EpicQuestReward$[@random], 1;
        misceffect FX_GETITEM, strcharinfo(0);
        message strcharinfo(0), "This is something special alright. Chances are you won't find anything like this again.";
        goto L_End1;

L_EndReward:
    delitem @RequiredItemSn$, 1;
    set @QuestTime, gettimetick(2) + @QUEST_QUEST_REDO_WAIT_TIME;
    set @random, rand(1, (getarraysize(@SmallQuestRewards$) - 1));
    getitem @SmallQuestItems$[@random], rand(1, 3);
    getexp rand(1000), 0;
    set Zeny, Zeny + rand(500);
    set @random, rand(1, (getarraysize(@MediumQuestRewards$) - 1));
    getitem @MediumQuestRewards$[@random], rand(0, 2);
    set @random, rand(1, (getarraysize(@EndQuestRewards$) - 1));
    getitem @EndQuestRewards$[@random], 1;
    getitem @EndQuestRewards$[@random], rand(0, 1);
    message strcharinfo(0), "Thar she blows! Loot at all this loot!";
    misceffect FX_GETITEM, strcharinfo(0);
    goto L_End1;

L_EndTooYoung:
    message strcharinfo(0), "The item is empty.";
    goto L_End1;

L_WarmUp:
    set @questtimepenalty, gettimetick(2);
    getitem @WarmUp$, 1;
    misceffect FX_GETITEM, strcharinfo(0);
    message strcharinfo(0), "Hmmm items! Maybe you can find something nice there!";
    goto L_End1;

L_End2:
    message strcharinfo(0), "Don't be greedy! You just found something a moment ago.";
    set @questtimepenalty, @questtimepenalty + 5;
    if (@questtimepenalty > gettimetick(2))
        set @questtimepenalty, gettimetick(2);
L_End1:
    set @random, 0;
    set @tmp, 0;
    set $@QuestItemId, 0;
    set @RequiredItem$, "";
    set @RequiredLevel, 0;
    callfunc("PirateBlock");
    return;

onInit:
    if (getarraysize(@questitem_posy) != getarraysize(@questitem_posx))
        goto L_FAULTY_SETUP;

    callsub S_enableItems;
    end;

S_enableItems:
    enablenpc "#Item" + $@QuestItemId;
    return;

S_disableItems:
    disablenpc "#Item" + $@QuestItemId;
    return;

L_FAULTY_SETUP:
    disablenpc "#Item" + $@QuestItemId;
    end;

OnTimer30:
    callsub S_enableItems;
    stopnpctimer;
    // an item can be 'found' multiple times, make this number of possible findings
    // depend on the number of players currently on the map.
    set $@AQUEST_mapcount, 1 + getmapusers(@CurrentMap$) / 3;

    if ($@peopleFoundItems[$@QuestItemId] < $@AQUEST_mapcount)
        return;

    set $@peopleFoundItems[$@QuestItemId], 0;

    setnpctimer 0;
    callsub S_disableItems;
    set @questitemPos, rand(getarraysize(@questitem_posx));
    npcwarp @questitem_posx[@questitemPos], @questitem_posy[@questitemPos], "#Item" + $@QuestItemId;
    return;

}
